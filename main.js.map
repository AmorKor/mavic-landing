{"version":3,"sources":["main.ts"],"names":[],"mappings":";;;;;;;AAWA,IAAM,UAAU,GAAG,UAAC,IAAa;IAC7B,IAAM,OAAO,GAAgB;QACzB,OAAO,EAAE,IAAI;QACb,KAAK,EAAE,IAAI,CAAC,WAAW;QACvB,MAAM,EAAE,IAAI,CAAC,YAAY;QACzB,IAAI,EAAE,IAAI;QACV,IAAI,EAAE,IAAI;KACb,CAAA;IAED,OAAO,OAAO,CAAA;AAClB,CAAC,CAAA;AASD,uCAAuC;AACvC,IAAM,UAAU,GAAG;IACf,IAAM,IAAI,GAAgB;QACtB,UAAU,EAAE,EAAE;QACd,IAAI,EAAE,IAAI;QACV,IAAI,EAAE,IAAI;QACV,OAAO,EAAE,IAAI;KAChB,CAAA;IAEG,iDAAiD;IACjD,iCAAiC;IACjC,0DAA0D;IAC1D,2BAA2B;IAE/B,OAAO,IAAI,CAAA;AACf,CAAC,CAAA;AAED,IAAM,MAAM,GAAG,UAAC,KAAkB,IAAK,OAAA,UAAC,UAAyB;IAC7D,IAAM,WAAW,kBAAO,UAAU,CAAC,CAAA;IACnC,IAAM,IAAI,GAAG,WAAW,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;IAC/C,IAAM,OAAO,GAAG,KAAK,CAAA;IAErB,OAAO,CAAC,IAAI,GAAG,IAAI,CAAA;IACnB,IAAI,CAAC,IAAI,GAAG,OAAO,CAAA;IAEnB,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;IAEzB,OAAO,WAAW,CAAA;AACtB,CAAC,EAXsC,CAWtC,CAAA;AAED,IAAM,IAAI,GAAG,UAAU,EAAE,CAAA;AACzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;AACjB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;AACpB,0DAA0D;AAC1D,qFAAqF;AACrF,oBAAoB;AACpB,qBAAqB;AACrB,wBAAwB;AACxB,+CAA+C;AAE/C,IAAI","file":"main.js","sourcesContent":["interface ISliderNode {\r\n    DOMNode: Element\r\n    width: number,\r\n    height: number\r\n    next: ISliderNode | null\r\n    prev: ISliderNode | null\r\n}\r\n\r\n// creates new slide instance referenced to DOM node\r\ntype nodeFactroy = (node: Element) => ISliderNode\r\n\r\nconst createNode = (node: Element): ISliderNode => {\r\n    const newNode: ISliderNode = {\r\n        DOMNode: node,\r\n        width: node.clientWidth,\r\n        height: node.clientHeight,\r\n        next: null,\r\n        prev: null\r\n    }\r\n\r\n    return newNode\r\n} \r\n\r\ninterface ILinkedList {\r\n    collection: ISliderNode[]\r\n    head: ISliderNode | null\r\n    tail: ISliderNode | null\r\n    current: ISliderNode | null\r\n}\r\n\r\n// creates array properly linked nodes \r\nconst createList = (): ILinkedList => {\r\n    const list: ILinkedList = {\r\n        collection: [],\r\n        head: null,\r\n        tail: null,\r\n        current: null\r\n    }\r\n\r\n        // list.collection = appendNodes(node, container)\r\n        // list.head = list.collection[0]\r\n        // list.tail = list.collection[list.collection.length - 1]\r\n        // list.current = list.head\r\n    \r\n    return list\r\n}\r\n\r\nconst append = (slide: ISliderNode) => (collection: ISliderNode[]): ISliderNode[] => {\r\n    const _collection = [...collection]\r\n    const prev = _collection[collection.length - 1]\r\n    const current = slide\r\n    \r\n    current.prev = prev\r\n    prev.next = current\r\n\r\n    _collection.push(current)\r\n\r\n    return _collection\r\n}\r\n\r\nconst list = createList()\r\nconsole.log(list)\r\nconsole.log('hello')\r\n// list.collection = document.querySelector('.img__inner')\r\n// list.collection = Array.from(document.querySelector('.slider__inner')?.childNodes)\r\n// console.log(test)\r\n// interface Slider {\r\n//     list: ILinkedList\r\n//     controllers: IController[] | IController\r\n\r\n// }\r\n"]}