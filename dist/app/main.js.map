{"version":3,"sources":["main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["interface INode {\r\n    element: any\r\n    next: INode\r\n    prev: INode\r\n}\r\n\r\ninterface ILinkedList {\r\n    collection: INode[]\r\n    \r\n    getHead(): INode\r\n    getTail(): INode\r\n    getCurrent(): INode\r\n    setCurrent(index: number): INode\r\n    toNext(): INode\r\n    toPrev(): INode\r\n}\r\n\r\ninterface IController {\r\n    node: Element\r\n    \r\n    renderState(): void\r\n    disable(): boolean,\r\n    enable(): boolean \r\n}\r\n\r\ninterface ITransformer {    \r\n    node: Element\r\n    getActions(): string[]\r\n    setActions(...acts: string[]): string[]\r\n    render(): HTMLElement\r\n}\r\n\r\ninterface IPointers {\r\n    nodes: IController[]\r\n    prev: IController | null\r\n    render(index: number): void\r\n}\r\n\r\nconst NodeF = (element: HTMLElement) => ({    \r\n    element,\r\n    next: null,\r\n    prev: null\r\n}) \r\n\r\nconst linkNodes = (nodes: INode[]): INode[] => (\r\n    nodes.map((node, i, arr) => (\r\n        Object.assign(node, {\r\n            next: arr[i + 1],\r\n            prev: arr[i - 1]\r\n        })\r\n    ))\r\n)\r\n\r\nconst compose = (...fns: any[]) => (arg: any) => \r\n    fns.reduceRight((acc, fn) => fn(acc), arg) \r\n\r\nconst pipe = (...fns: any[]) => (arg: any) => \r\n    fns.reduce((acc, fn) => fn(acc), arg)\r\n    \r\nconst withConstructor = (constructor: object) => (obj: object) => ({\r\n    __proto__: {\r\n        constructor\r\n    },\r\n    ...obj\r\n})    \r\n    \r\nconst ListWrapper = (nodes: INode[]): ILinkedList => {\r\n    const collection = [...nodes]\r\n    let head = nodes[0]\r\n    let tail = nodes[nodes.length - 1]\r\n    let current = nodes[0]\r\n    \r\n    return {\r\n        collection,\r\n        getHead: () => head,\r\n        getTail: () => tail,\r\n        getCurrent: () => current,\r\n        setCurrent: (index) => collection[index] ? current = collection[index]: tail.next,\r\n        toNext: () => current.next ? current = current.next : current.next,\r\n        toPrev: () => current.prev ? current = current.prev : current.prev\r\n    }\r\n}\r\n\r\nconst Controller = (node: Element) => (activeSelector: string): IController  => {\r\n    let isActive = false\r\n    return {\r\n        node,\r\n\r\n        renderState: () => {            \r\n            if(isActive) {\r\n                node.classList.add(activeSelector)\r\n            } else {\r\n                node.classList.remove(activeSelector)\r\n            }\r\n        },\r\n        disable: () => isActive = false,\r\n        enable: () => isActive = true\r\n    }\r\n}\r\n\r\nconst Transformer = (node: HTMLElement) => (...acts: string[]): ITransformer  => {\r\n    let actions = [...acts]\r\n    return {\r\n        node,\r\n        \r\n        render() {\r\n            node.style.transform = actions.join('')\r\n            return node\r\n        },\r\n        getActions: () => actions,\r\n        setActions(...acts: string[]) {return actions = [...acts]},\r\n    }\r\n}\r\n\r\nconst LinkedList = (nodes: NodeListOf<Element>): ILinkedList => (\r\n    ListWrapper(\r\n        linkNodes([...nodes].map(NodeF))\r\n        )\r\n)\r\n\r\nconst Controllers = (nodes: NodeListOf<Element>) => (activeSelector: string) => (\r\n    [...nodes].map(Controller).map((fn) => fn(activeSelector))\r\n)\r\n\r\nconst Pointers = (nodes: NodeListOf<Element>) => (activeSelector: string): IPointers => ({\r\n    nodes: Controllers(nodes)(activeSelector),\r\n    prev: null,\r\n    \r\n    render(index) {\r\n        this.nodes.forEach((point, i) => {\r\n            if(index === i) {\r\n                point.enable()\r\n                point.renderState()\r\n                if(this.prev) {\r\n                    this.prev.disable()\r\n                    this.prev.renderState()\r\n                }\r\n                this.prev = point\r\n            }\r\n        })\r\n    }     \r\n})\r\n\r\ninterface SliderArg {\r\n    pages: ILinkedList \r\n    track: ITransformer\r\n    prevBtn?: IController\r\n    nextBtn?: IController\r\n    pointers?: IPointers\r\n    isVertical?: boolean\r\n}\r\n\r\nconst Slider = ({\r\n    pages, \r\n    track,\r\n    prevBtn,\r\n    nextBtn,\r\n    pointers,\r\n    isVertical\r\n    }: SliderArg) => {\r\n    const _pages = Object.assign({}, pages)\r\n    const _track = Object.assign({}, track)\r\n    const _prevBtn = Object.assign({}, prevBtn)\r\n    const _nextBtn = Object.assign({}, nextBtn)\r\n    let _pointers\r\n    if(pointers) _pointers = Object.assign({}, pointers)\r\n    if(_pages.collection.length !== 0) _nextBtn.enable()\r\n        \r\n    return {\r\n        prevBtn: _prevBtn,\r\n        nextBtn: _nextBtn,\r\n        pointers: _pointers,\r\n        currentSlide: 1,\r\n        \r\n        render(slideNum: number) {            \r\n            let page \r\n\r\n            if(slideNum === this.currentSlide + 1) {\r\n                page = _pages.toNext()\r\n            } else if(slideNum === this.currentSlide - 1) {\r\n                page = _pages.toPrev()\r\n            } else {\r\n                page = _pages.setCurrent(slideNum - 1)\r\n            }\r\n\r\n            if(!page) return\r\n\r\n            let multiplier = slideNum - 1\r\n            \r\n            if(\r\n                this.currentSlide === _pages.collection.length ||\r\n                this.currentSlide > slideNum \r\n            ) {\r\n                multiplier = this.currentSlide - (this.currentSlide - slideNum + 1)\r\n            }\r\n\r\n            _track.setActions(\r\n                isVertical ?\r\n                `translateY(-${page.element.clientHeight * multiplier}px)` :\r\n                `translateX(-${page.element.clientWidth * multiplier}px)` \r\n            )\r\n\r\n            if(!page.next) {\r\n                nextBtn?.disable()\r\n                nextBtn?.renderState()\r\n            } else if(!page.prev) {\r\n                prevBtn?.disable()\r\n                prevBtn?.renderState()\r\n            } else {\r\n                nextBtn?.enable()\r\n                nextBtn?.renderState()\r\n                prevBtn?.enable()\r\n                prevBtn?.renderState()\r\n            }\r\n            \r\n            if(pointers) {\r\n                pointers.render(slideNum - 1)\r\n            }\r\n            \r\n            this.currentSlide = slideNum\r\n            \r\n            return _track.render()\r\n        }\r\n    }\r\n}\r\n\r\nconst Question = ({controller, box, controllerAct, boxAct}: {\r\n    controller: Element, box: HTMLElement, controllerAct: string, boxAct: string\r\n}) => ({\r\n    btn: Controller(controller)(controllerAct),\r\n    answer: Transformer(box)(boxAct)\r\n});\r\n\r\n// [...document.querySelectorAll('.question__controller')].map(Pointers)\r\n\r\nconst question = Question({\r\n    controller: document.querySelector('.question__controller'),\r\n    box: document.querySelector('.question__answer'),\r\n    controllerAct: 'question__controller--active',\r\n    boxAct: 'question__answer--active'\r\n})\r\n\r\nconsole.log(question)\r\n\r\n// const qa = Controllers(document.querySelectorAll('.question__controller'))('question__controller--active')\r\nconst qa = Pointers(document.querySelectorAll('.question__controller'))('question__controller--active')\r\n\r\ndocument.querySelector('.qa__wrapper')?.addEventListener('click', (e) => {\r\n    qa.nodes.forEach((btn, i) => {\r\n        if(e.target === btn.node) {\r\n            qa.render(i)\r\n        }\r\n    })\r\n})\r\n\r\nconst imgSlider = Slider({\r\n    pages: LinkedList(document.querySelectorAll('.slider__img')),\r\n    track: Transformer(document.querySelector('.slider__inner'))(),\r\n    prevBtn: Controller(document.querySelector('.controller--left'))('controller--active'),\r\n    nextBtn: Controller(document.querySelector('.controller--right'))('controller--active'),\r\n})\r\n\r\ndocument.querySelector('.buttonContainer')?.addEventListener('click', (e) => {\r\n    if(e.target === imgSlider.prevBtn.node) {\r\n        imgSlider.render(imgSlider.currentSlide - 1);\r\n    } else {\r\n        imgSlider.render(imgSlider.currentSlide + 1)\r\n    }\r\n})\r\n\r\nconst pageSlider = Slider({\r\n    pages: LinkedList(document.querySelectorAll('.page')),\r\n    track: Transformer(document.querySelector('.pageContainer'))(),\r\n    nextBtn: Controller(document.querySelector('.sliderBtn'))('sliderBtn--active'),\r\n    pointers: Pointers(document.querySelectorAll('.menu__link'))('menu__link--active'),\r\n    isVertical: true\r\n})\r\n\r\npageSlider.nextBtn.node.addEventListener('click', () => {\r\n    pageSlider.render(pageSlider.currentSlide + 1)\r\n})\r\n\r\ndocument.querySelector('.header')?.addEventListener('click', (e) => {\r\n    pageSlider.pointers?.nodes.forEach((pointer, i) => {\r\n        if(e.target === pointer.node) {\r\n            pageSlider.render(i + 1)                        \r\n        }\r\n    })\r\n})"]}